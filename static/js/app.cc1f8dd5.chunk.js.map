{"version":3,"sources":["facade.js","components/ButtonComponent.js","UploadScreen.js","App.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","downloadUrl","a","async","getDownloadURL","ref","storage","result","this","app","initializeApp","getStorage","ButtonComp","props","Math","floor","random","View","style","width","aspectRatio","overflow","right","marginTop","top","num","position","TouchableOpacity","styles","container","marginLeft","circle","backgroundColor","bgc","glassBackground","Text","buttonText","StyleSheet","create","textAlign","alignItems","flexDirection","opacity","borderRadius","height","zIndex","marginRight","alignSelf","number","fontSize","fontWeight","color","UploadScreen","list","i","push","console","log","useState","randBlue","randRed","randGreen","length","toString","springInAnimated","useRef","Animated","Value","current","flexGrow","left","FlatList","data","initialNumToRender","renderItem","index","item","_","backgrounColor","transform","translateX","onPress","timing","toValue","useNativeDriver","Duration","start","flex","selectButton","justifyContent","uploadButton","imageContainer","marginBottom","progressBarContainer","imageBox","App","StatusBar","barStyle"],"mappings":"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","file":"static/js/app.cc1f8dd5.chunk.js","sourcesContent":["import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\n\nimport { initializeApp } from \"firebase/app\";\n\nimport React, { useState } from 'react';\n\nimport * as ImagePicker from 'expo-image-picker';\nimport storage from '@react-native-firebase/storage';\n//import * as Progress from 'react-native-progress';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDUb8WY1JbYORkE03k4PsJ7PfpDAKAr_aY\",\n    authDomain: \"medicbook-ios.firebaseapp.com\",\n    databaseURL: \"https://medicbook-ios-default-rtdb.firebaseio.com\",\n    projectId: \"medicbook-ios\",\n    storageBucket: \"medicbook-ios.appspot.com\",\n    messagingSenderId: \"413894118278\",\n    appId: \"1:413894118278:web:da6c43267e2b7b6ba1fa07\",\n    measurementId: \"G-63DPJ28BCY\"\n  };\n\n\nclass Facade{\n    constructor(){\n        this.app = initializeApp(firebaseConfig);\n        this.storage = getStorage();\n        \n        //this.storage = getStorage(this.app);\n        \n    }\n\n    downloadUrl = async () => {\n        let result = await getDownloadURL(ref(this.storage, 'DentalMaterials/החייאת בקרת נזקים בשדהx.pdf'))\n        return result\n    }\n}\n\nlet facade = new Facade()\nexport default facade;","import {View, Text, StyleSheet, TouchableOpacity} from 'react-native'\n\nexport default function ButtonComp(props){\n    let randBlue = Math.floor(Math.random() * 256)\n    let randRed = Math.floor(Math.random() * 256) \n    let randGreen = Math.floor(Math.random() * 256)\n    return (\n            <View style={{width: '100%',\n            aspectRatio: 7,\n            overflow: 'hidden',\n            right: 0,\n            marginTop: 10,\n            //backgroundColor: 'cyan',\n            right: 0,\n            top: 64 * props.num,\n            position: 'absolute',\n            \n\n            \n                }}>\n                <TouchableOpacity style={[styles.container, {marginLeft: 20 + props.num * 2}]}>\n                    <View style={[styles.circle, {backgroundColor: props.bgc } ]}/>\n                    \n                    <View style={[styles.glassBackground]}></View>\n                    \n                    <Text style={styles.buttonText}>Default Comp</Text>\n                \n                </TouchableOpacity>\n            </View>\n            \n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      width: '120%',\n      \n      \n      aspectRatio: 9,\n      textAlign: 'center',\n      \n      //display: 'flex',\n      //justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexDirection: 'row',\n      \n      \n      \n    },\n    \n    glassBackground: {\n        backgroundColor: '#e4eeff',\n        opacity: 0.8,\n        borderRadius: 150,\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        top: 0, right: 0,\n        zIndex: 2,\n\n    },\n    \n    circle: {\n        borderRadius: '150%',\n        height: '80%',\n        aspectRatio: 1,\n        backgroundColor: '#eaa1ff',\n        marginRight: 10,\n        zIndex: 3,\n        alignSelf: 'center',\n        marginLeft: 3,\n        marginRight: '10%',\n    },\n\n    number : {\n        fontSize: 40, \n        fontWeight: 'bold', \n        color: 'black',\n        marginRight: 20,\n        zIndex: 3,\n        alignSelf: 'center'\n    },\n    \n    buttonText: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        color: '#060606',\n        zIndex: 3,\n        alignSelf: 'center'\n    }\n})","import facade from \"./facade\";\nimport {\n  View,\n  SafeAreaView,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Platform,\n  Alert,\n  Image,\n  Animated,\n  FlatList\n} from 'react-native';\nimport {useEffect, useState, useRef} from 'react'\nimport ButtonComp from './components/ButtonComponent'\nimport {Page, Document} from 'react-pdf';\n\n\n\n\n\n//const pickImage = async () => {\n//  // No permissions request is necessary for launching the image library\n//  let result = await ImagePicker.launchImageLibraryAsync({\n//    mediaTypes: ImagePicker.MediaTypeOptions.All,\n//    allowsEditing: true,\n//    aspect: [4, 3],\n//    quality: 1,\n//  });\n//\n//  console.log(result);\n//\n//  if (!result.cancelled) {\n//    setImage(result.uri);\n//  }\n//};\n\n// Import the functions you need from the SDKs you need\n\n\n\n\n\nexport default function UploadScreen() {\n  function getUrl(){\n    let topic = \"trauma\"\n    let material = \"מנהלתי- נוהל הפניות חריגות\"\n\n    let firebaseStorageApi = \"https://storage.googleapis.com/medicbook-ios.appspot.com/Anatomy/%D7%94%D7%92%D7%99%D7%A9%D7%94%20%D7%9C%D7%A4%D7%A6%D7%99%D7%A2%D7%95%D7%AA%20%D7%97%D7%96%D7%94%20%D7%91%D7%A9%D7%93%D7%94%20%D7%A2%D7%93%D7%9B%D7%95%D7%9F%202022.pdf\";\n    let token= \"?alt=media&token=94588795-6226-42ad-9f78-7cdb49792ce3\"\n    let url = firebaseStorageApi + topic + \"%2F\" + material +  \".pdf\" + token\n    return url\n  }\n  let url = \"https://storage.googleapis.com/medicbook-ios.appspot.com/Anatomy/%D7%94%D7%92%D7%99%D7%A9%D7%94%20%D7%9C%D7%A4%D7%A6%D7%99%D7%A2%D7%95%D7%AA%20%D7%97%D7%96%D7%94%20%D7%91%D7%A9%D7%93%D7%94%20%D7%A2%D7%93%D7%9B%D7%95%D7%9F%202022.pdf\"\n  var list = []\n  for(let i = 0; i<30 ; i++){\n    list.push(i)\n  }\n  console.log(list)\n\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  let randBlue = Math.floor(Math.random() * 256)\n  let randRed = Math.floor(Math.random() * 256)\n  let randGreen = Math.floor(Math.random() * 256)\n\n  let index = 7\n  console.log(\n  'rgb(' + (256 - randBlue * (1 - index / list.length)).toString() + \",\" + (256 - randRed * ( 1 - index / list.length)).toString() + \",\" + ( 256 - randGreen * ( 1 - index / list.length)).toString()  + \")\"\n  )\n  function toString2(item){\n    console.log(item)\n    return \"\"\n  }\n\n  const springInAnimated = useRef(new Animated.Value(0)).current;\n  function startAnimation(){\n    \n    Animated.timing(springInAnimated, {\n      toValue: 100,\n      useNativeDriver: false,\n      Duration: 5000,\n    }).start();\n  }\n\n  \n  \n\n  \n  \n    \n  return (\n    {/**\n       <SafeAreaView style={styles.container}>\n      <TouchableOpacity style={styles.selectButton} onPress={pickImage}>\n        <Text style={styles.buttonText}>Pick an image</Text>\n      </TouchableOpacity>\n      \n      {image !== null ? (\n        <Image source={{ uri: image.uri }} style={styles.imageBox} />\n      ) : null}\n\n      <TouchableOpacity style={styles.uploadButton} onPress={uploadImage}>\n        <Text style={styles.buttonText}>Upload image</Text>\n      </TouchableOpacity>\n    \n    \n    \n      </SafeAreaView>*/},\n      <View style={{width: '100%', height: '100%', flexGrow: 1, flexDirection: 'row'}}>\n        {/*<iframe style={{width: '100%', height: '100%'}} src={\"https://docs.google.com/viewer?url=\" + \n         url + \n        \"&embedded=true\"}/>\n\n        <iframe style={{width: '100%', height: '100%'}} src={\n        url}/> */}\n          <View style={styles.left}>\n            <FlatList\n                        style={[styles.list]}\n                        data={list}\n                        key= { (_, index) => index}\n                        initialNumToRender ={40}\n                        renderItem= {({index, item}) => \n                          <Animated.View styles={{right: springInAnimated}}>\n                            <ButtonComp num={item} key={index} \n                              bgc= {\"rgb(\" + randBlue.toString() + \",\" + (256 - randRed * ( 1 - index / list.length)).toString() + \",\" + ( 256 - randGreen * ( 1 - index / list.length)).toString()  + \")\"}/>\n                          </Animated.View>\n                      \n                      }>\n                        \n      \n\n\n              </FlatList>   \n              <Animated.View style={{backgrounColor: 'yellow', width: 150, height: 150, transform: [{translateX: springInAnimated}]}}>\n                <View style={{backgrounColor: 'yellow', width: 150, height: 150}}>\n\n                </View>\n\n\n          </Animated.View>     \n          </View>\n          <TouchableOpacity style={{height: \"10%\", width: \"30%\", backgroundColor: 'cyan'}} onPress={startAnimation}>\n\n          </TouchableOpacity>\n          \n          \n          \n\n          \n        \n          \n        \n        \n        \n          \n      \n\n      </View>\n     \n      \n  );\n}\n\nconst styles = StyleSheet.create({\n  left: {\n    backgroundColor: 'black',\n    flex: 1,\n    left: 0,\n  },\n  right: {\n    backgroundColor: 'right',\n    flex: 1,\n    right: 0,\n    height: '100%',\n  },\n  list: {\n    height: '100%',\n  },\n  \n  \n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#bbded6'\n  },\n  selectButton: {\n    borderRadius: 5,\n    width: 150,\n    height: 50,\n    backgroundColor: '#8ac6d1',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  uploadButton: {\n    borderRadius: 5,\n    width: 150,\n    height: 50,\n    backgroundColor: '#ffb6b9',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  imageContainer: {\n    marginTop: 30,\n    marginBottom: 50,\n    alignItems: 'center'\n  },\n  progressBarContainer: {\n    marginTop: 20\n  },\n  imageBox: {\n    width: 300,\n    height: 300\n  }\n});","import React from 'react';\nimport { StatusBar } from 'react-native';\nimport UploadScreen from './UploadScreen';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\n\n\nconst App = () => {\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" />\n      <UploadScreen />\n      \n    </>\n  );\n};\nexport default App;"],"sourceRoot":""}